<style>
    #dialogs-section {
        margin-left: 10%;
        margin-right: 10%;
    }
</style>

<section id="dialogs-section" class="section js-section u-category-native-ui">
    <header class="section-header">
        <div class="section-wrapper">
            <h2>
                <img src="~/img/sb2.gif" style="width: 200px !important; height: auto;" />
                Use System Dialogs <u>WITHOUT</u> Node.js
            </h2><br />

            <div style="font-size: 1.2em !important;">
                Using Node.js in a C# .NET 9 Core Razor MVC web app with Electron.NET
                is like putting a <strong>
                    square peg in a round hole—unnecessary,
                    bloated
                </strong>, and
                fundamentally at odds with the streamlined, high-performance architecture
                of modern .NET. Electron.NET was built to give .NET developers native access
                to desktop-level power without dragging in Node.js and its fragile web of
                dependencies, security holes, and endless package churn. By avoiding Node,
                you keep your app faster, leaner, and entirely in the C# ecosystem you
                control—no npm hacks, no version hell, no nonsense. Just clean, efficient
                .NET code from top to bottom.<br />

                The <code>Electron.Dialog</code> in Electron.NET allows you to use
                native system dialogs WITHOUT Node.js for opening files or directories,
                saving a file or displaying informational messages.<br />

                This is a main process module because this process is more efficient
                with native utilities and it allows the call to happen without interupting
                the visible elements in your page's renderer process.<br />
            </div>

        </div>
    </header>

    <div class="demo">
        <div class="demo-wrapper">
            <button id="open-file-demo-toggle" class="text-start border rounded-3 p-3 mb-3 shadow-sm bg-light js-container-target demo-toggle-button" style="cursor: pointer; max-width: 600px;">
                <div class="text-dark fw-bold">Select An Image</div>
                <div class="text-muted small mt-1">
                    Supports: Win, macOS, Linux
                    <span class="mx-1">|</span>
                    Process: Main
                </div>
            </button>
            <div class="demo-box">
                <div class="demo-controls">
                    <button id="select-image" class="btn btn-sm btn-primary fw-bold">
                        Select Image
                    </button>
                    <input id="selected-image-path" type="text" readonly>
                </div>
                <p>In this demo, we use C# in the Controller.</p>
            </div>
        </div>
    </div>

    <div class="demo">
        <div class="demo-wrapper">
            <button id="open-file-demo-toggle" class="text-start border rounded-3 p-3 mb-3 shadow-sm bg-light js-container-target demo-toggle-button" style="cursor: pointer; max-width: 600px;">
                <div class="text-dark fw-bold">Open a File or Directory</div>
                <div class="text-muted small mt-1">
                    Supports: Win, macOS, Linux
                    <span class="mx-1">|</span>
                    Process: Main
                </div>
            </button>
            <div class="demo-box">
                <div class="demo-controls">
                    <button id="select-directory" class="btn btn-sm btn-primary fw-bold">
                        View Demo
                    </button>
                    <span class="demo-response" id="selected-file"></span>
                </div>
                <p>In this demo, the <code>ipcRenderer</code> is used to send a message from the renderer process instructing the main process to launch the open file (or directory) dialog. If a file is selected, the main process can send that information back to the renderer process.</p>
            </div>
        </div>
    </div>

    <div class="demo">
        <div class="demo-wrapper">
            <button id="error-dialog-demo-toggle" class="text-start border rounded-3 p-3 mb-3 shadow-sm bg-light js-container-target demo-toggle-button" style="cursor: pointer; max-width: 600px;">
                <div class="text-dark fw-bold">Error Dialog</div>
                <div class="text-muted small mt-1">
                    Supports: Win, macOS, Linux
                    <span class="mx-1">|</span>
                    Process: Main
                </div>
            </button>
            <div class="demo-box">
                <div class="demo-controls mb-2">
                    <button id="error-dialog" class="btn btn-primary btn-sm">View Demo</button>
                </div>
                <p>In this demo, the <code>ipcRenderer</code> is used to send a message from the renderer process instructing the main process to launch the error dialog.</p>
            </div>
        </div>
    </div>

    <div class="demo">
        <div class="demo-wrapper">
            <button id="information-dialog-demo-toggle" class="text-start border rounded-3 p-3 mb-3 shadow-sm bg-light js-container-target demo-toggle-button" style="cursor: pointer; max-width: 600px;">
                <div class="text-dark fw-bold">Information Dialog</div>
                <div class="text-muted small mt-1">
                    Supports: Win, macOS, Linux
                    <span class="mx-1">|</span>
                    Process: Main
                </div>
            </button>
            <div class="demo-box">
                <div class="demo-controls mb-2">
                    <button class="btn btn-primary btn-sm" id="information-dialog">View Demo</button>
                    <span class="demo-response" id="info-selection"></span>
                </div>
                <p>In this demo, the <code>ipcRenderer</code> is used to send a message from the renderer process instructing the main process to launch the information dialog. Options may be provided for responses which can then be relayed back to the renderer process.</p>
                <p>Note: The <code>title</code> property is not displayed in macOS.</p>
                <p>An information dialog can contain an icon, your choice of buttons, title and message.</p>
            </div>
        </div>
    </div>

    <div class="demo">
        <div class="demo-wrapper">
            <button id="save-dialog-demo-toggle" class="text-start border rounded-3 p-3 mb-3 shadow-sm bg-light js-container-target demo-toggle-button" style="cursor: pointer; max-width: 600px;">
                <div class="text-dark fw-bold">Save Dialog</div>
                <div class="text-muted small mt-1">
                    Supports: Win, macOS, Linux
                    <span class="mx-1">|</span>
                    Process: Main
                </div>
            </button>
            <div class="demo-box">
                <div class="demo-controls mb-2">
                    <button class="btn btn-primary btn-sm" id="save-dialog">View Demo</button>
                    <span class="demo-response" id="file-saved"></span>
                </div>
                <p>In this demo, the <code>ipcRenderer</code> is used to send a message from the renderer process instructing the main process to launch the save dialog. It returns the path selected by the user which can be relayed back to the renderer process.</p>
            </div>
        </div>
    </div>
</section>
